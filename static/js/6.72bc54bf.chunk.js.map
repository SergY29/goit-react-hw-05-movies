{"version":3,"file":"static/js/6.72bc54bf.chunk.js","mappings":"kRAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kDAITE,EAAOF,EAAAA,GAAAA,KAAH,0CAIJG,EAAOH,EAAAA,GAAAA,KAAH,gD,SCgEjB,EAtEe,WAAO,IAAD,EACnB,GAAiCI,EAAAA,EAAAA,UAAS,IAA1C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACtCC,GAAWC,EAAAA,EAAAA,MALE,SA6BJC,EA7BI,0EA6BnB,WAA0BJ,GAA1B,iGAEuBK,EAAAA,EAAAA,IAAeL,GAFtC,UAGoC,KAD1BM,EAFV,QAGaA,KAAKC,cAHlB,uBAIMC,MAAM,uDAJZ,0BAOIZ,EAAYU,EAAKA,KAAKG,SAP1B,kDASIC,QAAQC,IAAR,MATJ,0DA7BmB,wBA0CnB,OApBAC,EAAAA,EAAAA,YAAU,WACHZ,GAGLI,EAAWJ,EACZ,GAAE,CAACA,KAgBF,UAACV,EAAD,YACE,UAACC,EAAD,CAAMsB,SAjCW,SAAAC,GACnBA,EAAMC,iBACNhB,EAAgC,KAAhBN,EAAqB,CAAEuB,MAAOvB,GAAgB,CAAC,GACpC,KAAvBA,EAAYwB,QAIhBb,EAAWJ,GACXN,EAAU,KAJRc,MAAM,4BAKT,EAwBG,WACE,kBACEU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,SACLC,SA5Ca,SAAAT,GACnBpB,EAAUoB,EAAMU,OAAOC,MAAMC,cAC9B,EA2COD,MAAOhC,KAET,mBAAQyB,KAAK,SAAb,wBAEF,wBACGvB,GACCA,EAASgC,KAAI,SAAAC,GAAI,aACf,yBACE,SAACzC,EAAD,CAAW0C,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAM9B,GAA5C,mBACG0B,EAAKK,qBADR,QACyBL,EAAKM,kBAFvBN,EAAKE,GADC,QAU1B,C,+LCvEYK,EAAW,mCAAG,8FACZC,EAAAA,EAAAA,IACX,mGAFuB,mFAAH,qDAMXC,EAAc,mCAAG,WAAMP,GAAN,iFACfM,EAAAA,EAAAA,IAAA,6CAC2BN,EAD3B,6DADe,mFAAH,sDAMdzB,EAAc,mCAAG,WAAMW,GAAN,iFACfoB,EAAAA,EAAAA,IAAA,yHACuGpB,IAFxF,mFAAH,sDAMdsB,EAAe,mCAAG,WAAMR,GAAN,iFAChBM,EAAAA,EAAAA,IAAA,6CAC2BN,EAD3B,qEADgB,mFAAH,sDAMfS,EAAe,mCAAG,WAAMT,GAAN,iFAChBM,EAAAA,EAAAA,IAAA,6CAC2BN,EAD3B,4EADgB,mFAAH,qD","sources":["pages/Movies.styled.jsx","pages/Movies.jsx","servises/services.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const Main = styled.main`\n  padding: 30px;\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 15px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getSearchMovie } from '../servises/services';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { MovieItem, Main, Form } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchInput, setSearch] = useState('');\n  const [filmList, setFilmList] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleChange = event => {\n    setSearch(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(searchInput !== '' ? { query: searchInput } : {});\n    if (searchInput.trim() === '') {\n      alert('Enter words to search for');\n      return;\n    }\n    movieCatch(search);\n    setSearch('');\n  };\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    movieCatch(search);\n  }, [search]);\n\n  async function movieCatch(search) {\n    try {\n      const data = await getSearchMovie(search);\n      if (data.data.total_results === 0) {\n        alert(`Sorry! We didn't find anything, change your request`);\n        return;\n      }\n      setFilmList(data.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Main>\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"search\"\n          onChange={handleChange}\n          value={searchInput}\n        />\n        <button type=\"submit\">Search</button>\n      </Form>\n      <ul>\n        {filmList &&\n          filmList.map(film => (\n            <li key={film.id}>\n              <MovieItem to={`${film.id}`} state={{ from: location }}>\n                {film.original_name ?? film.original_title}\n              </MovieItem>\n            </li>\n          ))}\n      </ul>\n    </Main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const getTrending = async () => {\n  return await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=22fa368820f7f9af3c30ea0e6b34461d&page=1'\n  );\n};\n\nexport const getDetailMovie = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getSearchMovie = async query => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1&query=${query}`\n  );\n};\n\nexport const getMovieCredits = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getMovieReviews = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1`\n  );\n};\n"],"names":["MovieItem","styled","NavLink","Main","Form","useState","searchInput","setSearch","filmList","setFilmList","useSearchParams","searchParams","setSearchParams","search","get","location","useLocation","movieCatch","getSearchMovie","data","total_results","alert","results","console","log","useEffect","onSubmit","event","preventDefault","query","trim","type","autoComplete","autoFocus","placeholder","name","onChange","target","value","toLowerCase","map","film","to","id","state","from","original_name","original_title","getTrending","axios","getDetailMovie","getMovieCredits","getMovieReviews"],"sourceRoot":""}