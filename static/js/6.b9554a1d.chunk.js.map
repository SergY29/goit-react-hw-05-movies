{"version":3,"file":"static/js/6.b9554a1d.chunk.js","mappings":"4PAGaA,GAAYC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,kD,SC8DtB,EA5De,WAAO,IAAD,EAEnB,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAJzB,wCAoBnB,WAA2BD,GAA3B,iGAEuBE,EAAAA,EAAAA,IAAeF,GAFtC,UAGoC,KAD1BG,EAFV,QAGaA,KAAKC,cAHlB,uBAIMC,MAAM,uDAJZ,0BAOIT,EAAYO,EAAKA,KAAKG,SAP1B,kDASIC,QAAQC,IAAR,MATJ,0DApBmB,wBAiCnB,OACE,6BACE,kBAAMC,SAxBW,SAAAC,GACnBA,EAAMC,iBACgB,KAAlBX,EAAOY,OAbM,oCAiBjBC,CAAYb,GAHVK,MAAM,4BAIT,EAiBG,WACE,kBACES,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,0BACZC,KAAK,SACLC,SApCa,SAAAT,GACnB,IAAMU,EAAiBV,EAAMW,OAAOC,MAAMC,cAC1CxB,EAAmC,KAAnBqB,EAAwB,CAAEI,MAAOJ,GAAmB,CAAC,EACtE,KAmCK,mBAAQN,KAAK,SAAb,wBAEF,wBACGnB,GACCA,EAAS8B,KAAI,SAAAC,GAAI,aACf,yBACE,SAACnC,EAAD,CAAWoC,GAAE,UAAKD,EAAKE,IAAvB,mBACGF,EAAKG,qBADR,QACyBH,EAAKI,kBAFvBJ,EAAKE,GADC,QAU1B,C,+IC7DYG,EAAW,mCAAG,8FACZC,EAAAA,EAAAA,IACX,mGAFuB,mFAAH,qDAMXC,EAAc,mCAAG,WAAML,GAAN,iFACfI,EAAAA,EAAAA,IAAA,6CAC2BJ,EAD3B,6DADe,mFAAH,sDAMd1B,EAAc,mCAAG,WAAMsB,GAAN,iFACfQ,EAAAA,EAAAA,IAAA,yHACuGR,IAFxF,mFAAH,qD","sources":["pages/Movies.styled.jsx","pages/Movies.jsx","servises/services.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useState } from 'react';\nimport { getSearchMovie } from '../servises/services';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieItem } from './Movies.styled';\n\nconst Movies = () => {\n  // const [search, setSearch] = useState('');\n  const [filmList, setFilmList] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n\n  const handleChange = event => {\n    const normalizeValue = event.target.value.toLowerCase();\n    setSearchParams(normalizeValue !== '' ? { query: normalizeValue } : {});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (search.trim() === '') {\n      alert('Enter words to search for');\n      return;\n    }\n    imagesCatch(search);\n  };\n\n  async function imagesCatch(search) {\n    try {\n      const data = await getSearchMovie(search);\n      if (data.data.total_results === 0) {\n        alert(`Sorry! We didn't find anything, change your request`);\n        return;\n      }\n      setFilmList(data.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies and films\"\n          name=\"search\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {filmList &&\n          filmList.map(film => (\n            <li key={film.id}>\n              <MovieItem to={`${film.id}`}>\n                {film.original_name ?? film.original_title}\n              </MovieItem>\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const getTrending = async () => {\n  return await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=22fa368820f7f9af3c30ea0e6b34461d&page=1'\n  );\n};\n\nexport const getDetailMovie = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getSearchMovie = async query => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1&query=${query}`\n  );\n};\n"],"names":["MovieItem","styled","NavLink","useState","filmList","setFilmList","useSearchParams","searchParams","setSearchParams","search","get","getSearchMovie","data","total_results","alert","results","console","log","onSubmit","event","preventDefault","trim","imagesCatch","type","autoComplete","autoFocus","placeholder","name","onChange","normalizeValue","target","value","toLowerCase","query","map","film","to","id","original_name","original_title","getTrending","axios","getDetailMovie"],"sourceRoot":""}